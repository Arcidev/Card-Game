#pragma once
#include "ByteBuffer.h"

constexpr int MAX_PACKET_SIZE = 10000;

enum class CMSGPackets
{
    CMSG_INIT_PACKET = 0,
    CMSG_CHAT_MESSAGE,
    CMSG_START_GAME,
    CMSG_SELECTED_CARDS,
    CMSG_CARD_ACTION,
    CMSG_DEFEND_SELF,
    CMSG_USER_CREATE,
    CMSG_USER_LOGIN,
    CMSG_USER_CHANGE_PASSWORD,
    CMSG_MAX_PACKET_VALUE
};

enum class SMSGPackets
{
    SMSG_INIT_RESPONSE = 0,
    SMSG_GAME_INFO,
    SMSG_AVAILABLE_CARDS,
    SMSG_CHAT_MESSAGE,
    SMSG_WHISPER_FAILED,
    SMSG_SELECT_CARDS_FAILED,
    SMSG_SELECT_CARDS_WAIT_FOR_ANOTHER_PLAYER,
    SMSG_SELECT_CARDS,
    SMSG_DECK_CARDS,
    SMSG_ACTIVE_PLAYER,
    SMSG_PLAYER_DISCONNECTED,
    SMSG_ATTACK_RESULT,
    SMSG_END_GAME,
    SMSG_CARD_STAT_CHANGED,
    SMSG_SPELL_CAST_RESULT,
    SMSG_SPELL_DAMAGE,
    SMSG_APPLY_AURA,
    SMSG_SPELL_PERIODIC_DAMAGE,
    SMSG_CARD_HEALED,
    SMSG_MANA_REPLENISHMENT,
    SMSG_SPELL_DRAIN,
    SMSG_SPELL_AURA_EXPIRED,
    SMSG_SPELL_AURAS_REMOVED,
    SMSG_CARD_MORPH_INFO,
    SMSG_USER_RESULT,
    SMSG_SWAP_CARDS,
    SMSG_MAX_PACKET_VALUE
};

class Packet : public ByteBuffer
{
    public:
        Packet(SMSGPackets opcodeNumber);
        Packet(std::vector<uint8_t> const& data);
};
